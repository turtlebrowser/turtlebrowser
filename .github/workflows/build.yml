name: CI-Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    
    env:
      CONAN_USER_HOME: "${{ github.workspace }}/release/"
      CONAN_USER_HOME_SHORT: "${{ github.workspace }}/release/short"
      INSTALL_DIR: ${{ github.workspace }}/install/

    steps:
    - uses: actions/checkout@v2

    - name: Cache Conan modules
      id: cache-conan
      uses: turtlebrowser/conan-cache@master
      with:
          bot_name: turtlebrowser-bot
          bot_token: ${{ secrets.CACHE_REPO_TOKEN }}
          cache_name: turtlebrowser/conan-cache-turtlebrowser
          key: host-${{ runner.os }}-target-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
          target_os: ${{ runner.os }}
          lfs_limit: 60

    - name: Get Conan
      run: |
        pip3 install wheel setuptools
        pip3 install conan --upgrade
        mkdir build
        
    - name: Fix Path on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: echo "::add-path::/home/runner/.local/bin"

    - name: Get Conan Dependencies
      working-directory: build
      run: cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DCMAKE_BUILD_TYPE=Release ..

    - name: Clean up Conan
      run: |
        conan remove -f "*" --builds
        conan remove -f "*" --src
        conan remove -f "*" --system-reqs

    - name: Build
      working-directory: build
      run: cmake --build . --config Release -j 4

    - name: Install
      working-directory: build
      run: cmake --build . --config Release --target install

    - name: windeployqt
      if: matrix.os == 'windows-latest'
      working-directory: ${{ env.INSTALL_DIR }}/bin/
      run: |
        ${{ github.workspace }}/build/src/activate_run.ps1
        windeployqt.exe --qmldir ${{ github.workspace }}/src/resources/qml/ TurtleBrowser.exe

    - name: macdeployqt
      if: matrix.os == 'macos-latest'
      working-directory: ${{ env.INSTALL_DIR }}
      run: |
        source ${{ github.workspace }}/build/src/activate_run.sh
        DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH DYLD_FRAMEWORK_PATH=$DYLD_FRAMEWORK_PATH macdeployqt TurtleBrowser.app -dmg -qmldir=${{ github.workspace }}/src/resources/qml/

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-artifact
        path: ${{ env.INSTALL_DIR }}
